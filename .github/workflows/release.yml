name: Release to npm

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    environment: production
    
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Run linting
        run: npm run lint
      
      - name: Build package
        run: npm run build
      
      - name: Extract version from commit
        id: version
        run: |
          # Get the previous commit to see what changed
          PREV_COMMIT=$(git rev-parse HEAD~1)
          CURRENT_COMMIT=$(git rev-parse HEAD)
          
          # Get the package.json from previous commit
          git show $PREV_COMMIT:package.json > /tmp/prev_package.json
          PREV_VERSION=$(node -p "require('/tmp/prev_package.json').version")
          
          # Get current package.json version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          echo "Previous version: $PREV_VERSION"
          echo "Current version: $CURRENT_VERSION"
          
          # Only proceed if version actually changed
          if [ "$PREV_VERSION" != "$CURRENT_VERSION" ]; then
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "SHOULD_PUBLISH=true" >> $GITHUB_OUTPUT
            echo "Version changed from $PREV_VERSION to $CURRENT_VERSION"
          else
            echo "SHOULD_PUBLISH=false" >> $GITHUB_OUTPUT
            echo "No version change detected"
          fi
      
      - name: Check if version exists on npm
        if: steps.version.outputs.SHOULD_PUBLISH == 'true'
        id: version-check
        run: |
          echo "Checking if version ${{ steps.version.outputs.VERSION }} exists on npm..."
          if npm view @railpath/finance-toolkit@${{ steps.version.outputs.VERSION }} version > /dev/null 2>&1; then
            echo "EXISTS=true" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.version.outputs.VERSION }} already exists on npm"
          else
            echo "EXISTS=false" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.version.outputs.VERSION }} does not exist on npm"
          fi
      
      - name: Publish to npm
        if: steps.version.outputs.SHOULD_PUBLISH == 'true' && steps.version-check.outputs.EXISTS == 'false'
        run: |
          echo "Publishing version ${{ steps.version.outputs.VERSION }} to npm registry..."
          npm config set registry https://registry.npmjs.org/
          npm publish --provenance
      
      - name: Create Git tag
        if: steps.version.outputs.SHOULD_PUBLISH == 'true' && steps.version-check.outputs.EXISTS == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ steps.version.outputs.VERSION }}"
          git push origin "v${{ steps.version.outputs.VERSION }}"
      
      - name: Create GitHub Release
        if: steps.version.outputs.SHOULD_PUBLISH == 'true' && steps.version-check.outputs.EXISTS == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          release_name: Release v${{ steps.version.outputs.VERSION }}
          body: |
            ## 🚀 @railpath/finance-toolkit v${{ steps.version.outputs.VERSION }}
            
            ### 📦 Installation
            ```bash
            npm install @railpath/finance-toolkit@${{ steps.version.outputs.VERSION }}
            ```
            
            ### 🔗 Links
            - 📦 [npm Package](https://www.npmjs.com/package/@railpath/finance-toolkit)
            - 📖 [Documentation](https://github.com/railpath/finance-toolkit#readme)
            - 🐛 [Report Issues](https://github.com/railpath/finance-toolkit/issues)
          draft: false
          prerelease: false
